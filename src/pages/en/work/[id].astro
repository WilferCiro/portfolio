---
import worksLists from "../../../data/works-list";
import Layout from "../../../presentation/layouts/Layout.astro";
import StackList from "../../../presentation/components/molecules/StackList.astro";
import ButtonArrow from "../../../presentation/components/atoms/ButtonArrow.astro";
import ReviewsList from "../../../presentation/components/molecules/ReviewsList.astro";
import ProjectsList from "../../../presentation/components/molecules/ProjectsList.astro";
import TitlePage from "../../../presentation/components/atoms/TitlePage.astro";
import Divider from "../../../presentation/components/atoms/Divider.astro";
import DatesArray from "../../../presentation/components/atoms/DatesArray.astro";
import { getLangFromUrl, useTranslations } from "../../../data/i18n/utils";

export function getStaticPaths() {
  return worksLists.map((work) => {
    return {
      params: { id: work.id },
    };
  });
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { id } = Astro.params;

const work = worksLists.find((work) => work.id === id);
if (!id || typeof id === "undefined" || !work) {
  return Astro.redirect("/");
}

const posts = await Astro.glob("../../../data/description_works/*.md");
const currentPost = posts.find(({ file }) => file?.includes(`${work.id}.md`));

const image = work?.images[0].replace(".jpg", "-250.jpg");
---

<Layout title={`${t("work.experience_in")} ${work?.name}`}>
  <div class="container">
    <div class="description">
      <TitlePage title={work?.name} transition:name={`work-name-${work?.name}`}
        ><DatesArray dates={work.dates} />
      </TitlePage>
      <h3 transition:name={`work-profession-${work?.name}`}>
        {work.position}
      </h3>
      <Divider />
      <img
        src={"/images/works/" + image}
        alt={t("work.alt_image")}
        transition:name={`work-${work?.name}`}
        class="image"
      />
      {currentPost && <currentPost.Content />}
      <StackList stack={work.stack} />
      <Divider />
      {
        work.link && (
          <a href={work.link} target="_blank">
            <ButtonArrow label={t("work.go_to_site")} />
          </a>
        )
      }
    </div>
    {
      (work?.reviews || []).length > 0 && (
        <div>
          <h2>{t("generic.testimonials")}</h2>
          <Divider />
          <ReviewsList reviews={work?.reviews || []} />
        </div>
      )
    }
    {
      work.projects.length > 0 && (
        <div>
          <h2>{t("generic.projects")}</h2>
          <ProjectsList projects={work.projects} />
        </div>
      )
    }
  </div>
</Layout>

<style>
  .container {
    width: 80%;
    margin: auto;
    gap: 50px;
    padding: 20px;
    border-radius: 10px;
  }
  .description {
    min-height: 100vh;
    max-width: 740px;
    width: 95%;
    margin: auto;
    padding-top: 70px;
  }
  .image {
    width: 250px;
    height: 250px;
    border-radius: 20px;
    margin: auto;
    display: block;
  }
  h4,
  h3 {
    margin: 0px;
  }
  h2 {
    color: var(--primary-color);
    font-size: 30px;
  }
  h4 {
    font-weight: 400;
  }

  @media (max-width: 740px) {
    .container {
      width: 95%;
      flex-direction: column;
      padding-top: 100px;
    }
    .description {
      display: block;
      height: fit-content;
      padding-top: 10px;
    }
  }
</style>
