---
import {
	getLangFromUrl,
	useTranslatedPath,
	useTranslations,
} from "../../../data/i18n/utils";
import type { IndividualProjectSchema } from "../../../domain/schemas/ProjectsSchema";
import ButtonArrow from "./ButtonArrow.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

interface Props extends IndividualProjectSchema {}
const { id, ...data } = Astro.props;
---

<div class="card">
	<a href={translatePath(`/project/${id}`)} rel="referrer">
		<img
			class="image"
			src={`/images/projects/${id}/${data.images[0]}`}
			alt={`${t("project_card.image_of")} ${data.name}`}
			transition:name=`project-image-${id}`
		/>
	</a>
	<div>
		<div class="description">
			<header transition:name=`project-title-${id}`>{data.name}</header>
			<p transition:name=`project-description-${id}`>
				{data.description[lang]}
			</p>
		</div>
		<footer class="buttons">
			<a href={translatePath(`/project/${id}`)} rel="referrer">
				<ButtonArrow label={t("generic.see_more")} />
			</a>
		</footer>
	</div>
</div>

<style>
	.card {
		padding: 10px 15px;
		border-radius: 15px;
		transition: background-color 0.2s;
	}
	.image {
		width: 100%;
		height: 240px;
		display: block;
		border-radius: 15px;
		object-fit: cover;
		transition: all 0.2s;
	}
	.image:hover {
		scale: 1.05;
	}

	p {
		margin: 0px;
	}
	p {
		color: var(--text-color3);
		font-size: 15px;
	}
	header {
		font-size: 25px;
		margin-bottom: 10px;
		font-weight: 500;
	}
	.description {
		margin-top: 15px;
		padding: 4px;
		min-height: 160px;
	}
	.buttons {
		display: flex;
		align-items: center;
		justify-content: flex-end;
	}

	@media (min-width: 740px) and (max-width: 1000px) {
		.card {
			display: flex;
			align-items: flex-start;
			gap: 20px;
		}
		.image {
			width: 300px;
			height: 180px;
		}
	}
</style>
