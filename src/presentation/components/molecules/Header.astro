---
import SocialLinks from "../atoms/SocialLinks.astro";
import Tooltip from "../atoms/Tooltip.astro";
import CompassIcon from "../atoms/icons/CompassIcon.astro";
import HomeIcon from "../atoms/icons/HomeIcon.astro";
import AboutMeIcon from "../atoms/icons/AboutMeIcon.astro";
import ContactIcon from "../atoms/icons/ContactIcon.astro";
import MoonIcon from "../atoms/icons/MoonIcon.astro";
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../../../data/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const currentPath = Astro.url.pathname.replace(`/${lang}`, "");
const nextPage =
  lang === "es"
    ? "/en" + Astro.url.pathname
    : Astro.url.pathname.replace(`/${lang}`, "");
---

<header>
  <ul class="menu">
    <li>
      <Tooltip title={t("header.tooltip_home")}
        ><a
          href={translatePath("/")}
          class={currentPath === "/" ? "active" : ""}
          aria-label={t("header.title_home")}
          ><HomeIcon />
        </a>
      </Tooltip>
    </li>
    <li>
      <Tooltip title={t("header.tooltip_about_me")}>
        <a
          href={translatePath("/about/")}
          class={currentPath === "/about/" ? "active" : ""}
          aria-label={t("header.title_about_me")}
          ><AboutMeIcon />
        </a>
      </Tooltip>
    </li>
    <li>
      <Tooltip title={t("generic.projects")}>
        <a
          href={translatePath("/projects/")}
          class={currentPath === "/projects/" ||
          currentPath.includes("/project/")
            ? "active"
            : ""}
          aria-label={t("header.title_projects")}
          ><CompassIcon />
        </a>
      </Tooltip>
    </li>
    <li>
      <Tooltip title={t("generic.contactme")}>
        <a
          href={translatePath("/contact/")}
          class={currentPath === "/contact/" ? "active" : ""}
          aria-label={t("header.title_contact")}
          ><ContactIcon />
        </a>
      </Tooltip>
    </li>
    <li class="theme-option">
      <Tooltip title={t("header.tooltip_theme")} transition:persist>
        <div id="button-theme" data-theme-toggle><MoonIcon /></div>
      </Tooltip>
    </li>
    <li>
      <Tooltip title={t("header.tooltip_lang")}>
        <a
          href={nextPage}
          class={"lang-btn"}
          aria-label={`${lang === "es" ? "EN" : "ES"} ${t(
            "header.title_lang"
          )}`}
          >{lang === "es" ? "EN" : "ES"}
        </a>
      </Tooltip>
    </li>
  </ul>
</header>

<div class="social-links">
  <SocialLinks />
</div>

<style>
  header {
    position: fixed;
    left: 20px;
    height: 100vh;
    display: flex;
    align-items: center;
    z-index: 5;
  }
  .menu-button {
    display: none;
  }
  .menu {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
    justify-content: center;
    padding: 0px;
    margin: 0px;
    padding: 12px;
    border-radius: 16px;
    background-color: var(--bg-color2-opacity);
    backdrop-filter: blur(var(--blur-size));
    box-shadow: var(--shadow) 0px 2px 2px 0px, var(--shadow) 0px 4px 4px 0px,
      var(--shadow) 0px 8px 8px 0px, var(--shadow) 0px 16px 16px 0px,
      var(--shadow) 0px 32px 32px 0px;
  }
  .menu li a,
  #button-theme {
    border-radius: 10px;
    background-color: var(--bg-color1);
    display: block;
    padding: 8px 8px;
    color: var(--text-color3);
    transition: all 0.2s;
    border: solid 1px var(--bg-color1);
    cursor: pointer;
    display: flex;
    align-items: center;
  }
  .lang-btn {
    font-size: 20px;
    font-weight: bold;
  }
  .menu li a:hover,
  #button-theme:hover {
    color: var(--text-color1);
    opacity: 1;
  }
  .theme-option {
    margin-top: 20px;
  }
  .back-button {
    margin-bottom: 20px;
  }
  .social-links {
    top: 20px;
    right: 20px;
    position: fixed;
    padding: 10px 12px;
    border-radius: 16px;
    z-index: 3;
    background-color: var(--bg-color2-opacity);
    backdrop-filter: blur(var(--blur-size));
    box-shadow: var(--shadow) 0px 2px 2px 0px, var(--shadow) 0px 4px 4px 0px,
      var(--shadow) 0px 8px 8px 0px, var(--shadow) 0px 16px 16px 0px,
      var(--shadow) 0px 32px 32px 0px;
  }
  .active {
    color: var(--primary-color) !important;
    border: solid 1px var(--primary-color) !important;
  }
  @media (max-width: 740px) {
    header {
      bottom: 15px;
      left: 0px;
      height: auto;
      width: 100%;
      justify-content: center;
    }
    .theme-option {
      margin-top: 0px;
      margin-left: 20px;
    }
    .back-button {
      margin-right: 20px;
      margin-bottom: 0px;
    }
    .menu {
      flex-direction: row;
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const themeToggles = document.querySelectorAll("[data-theme-toggle]");

    const getTheme = () => localStorage.getItem("theme") || "light";

    const setTheme = (theme: string) =>
      document.documentElement.setAttribute("data-theme", theme);

    themeToggles.forEach((toggle) => {
      toggle.addEventListener("click", () => {
        const nextTheme = getTheme() === "light" ? "dark" : "light";
        localStorage.setItem("theme", nextTheme);
        setTheme(nextTheme);
      });
    });
  });
</script>
